name: Create installer

on:
  workflow_run:
    workflows: ["Build and package solution"]
    types:
      - completed
  workflow_dispatch:

jobs:
  run:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get version number from package.json
      id: get_version
      run: |
        $VERSION = (Get-Content package.json | ConvertFrom-Json).version
        echo "VERSION=$VERSION" >> $env:GITHUB_ENV
        echo "TAG_NAME=v$VERSION" >> $env:GITHUB_ENV

    - name: Create dist directory
      run: mkdir -p dist

    - name: Download wheel from GitHub release
      run: |
        $TAG_NAME = $env:TAG_NAME
        $REPO = "${{ github.repository }}"
        
        # Get the release assets
        $RELEASE_INFO = Invoke-RestMethod -Uri "https://api.github.com/repos/$REPO/releases/tags/$TAG_NAME" -Headers @{
          "Authorization" = "token ${{ secrets.GITHUB_TOKEN }}"
          "Accept" = "application/vnd.github.v3+json"
        }
        
        # Find the first wheel asset
        $WHEEL_ASSET = $RELEASE_INFO.assets | Where-Object { $_.name -like "*.whl" } | Select-Object -First 1
        
        if ($WHEEL_ASSET) {
          Write-Host "Found wheel asset: $($WHEEL_ASSET.name)"
          Invoke-WebRequest -Uri $WHEEL_ASSET.browser_download_url -OutFile "dist/$($WHEEL_ASSET.name)"
          echo "WHEEL_FILENAME=$($WHEEL_ASSET.name)" >> $env:GITHUB_ENV
        } else {
          Write-Host "Error: Could not find any wheel file in the release"
          Write-Host "Available assets:"
          $RELEASE_INFO.assets | ForEach-Object { Write-Host "- $($_.name)" }
          exit 1
        }

    - name: Download NSIS 3.11
      run: |
        Invoke-WebRequest -Uri "https://sourceforge.net/projects/nsis/files/NSIS%203/3.11/nsis-3.11-setup.exe/download" -OutFile "nsis-setup.exe"
        Start-Process -FilePath "nsis-setup.exe" -ArgumentList "/S" -Wait
        echo "Adding NSIS to PATH"
        echo "C:\Program Files (x86)\NSIS" >> $env:GITHUB_PATH

    - name: Build installer
      run: |
        echo "Building installer with NSIS..."
        makensis installer/Installer-UX.nsi

    - name: Rename installer
      run: |
        $INSTALLER_PATH = Get-ChildItem -Path "installer" -Filter "*.exe" | Select-Object -First 1 -ExpandProperty FullName
        $NEW_NAME = "open-webui-$env:VERSION-setup.exe"
        Move-Item -Path $INSTALLER_PATH -Destination "installer/$NEW_NAME"
        echo "INSTALLER_NAME=$NEW_NAME" >> $env:GITHUB_ENV

    - name: Upload installer to GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: installer/${{ env.INSTALLER_NAME }}
        tag_name: ${{ env.TAG_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 