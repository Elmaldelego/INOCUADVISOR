pipeline {
    agent any

    environment {
        IMAGE_NAME = "open-webui"
        IMAGE_TAG = "latest"
    }

    stages {

        stage('Clean Workspace') {
            steps {
                script {
                    deleteDir()
                }
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }


        stage('Build Docker Image') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'REGISTRY', variable: 'REGISTRY')]) {
                        def appImage = docker.build("${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}", ".")
                    }
                }
            }
        }

        stage('Push to Registry') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'AWS_ACCOUNT_ID', variable: 'AWS_ACCOUNT_ID'),
                        string(credentialsId: 'REGISTRY', variable: 'REGISTRY')
                    ]) {
                        withAWS(credentials: 'aws_admin_user', region: 'us-east-1') {
                            docker.withRegistry("https://${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com", "ecr:us-east-1:aws_admin_user") {
                                def appImage = docker.image("${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}")
                                appImage.push()
                                sh """
                                    echo "Pushed to ECR..."
                                """
                            }
                        }
                    }
                }
            }
        }

        stage('Deploy open-webui') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'REGISTRY', variable: 'REGISTRY')]) {
                        sh '''
                            echo "Applying deployment files"
                            echo "Current directory:" $(pwd)
                            kubectl apply -f open-webui-deployment.yaml
                            kubectl apply -f open-webui-service.yaml
                            echo "Setting image"
                            kubectl set image deployment/open-webui open-webui=${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Success"
        }
        failure {
            echo "Failure"
        }
    }
}
